{"ast":null,"code":"// src/AuthContext.js\nimport React,{createContext,useContext,useState}from'react';// Create the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Create the AuthProvider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const login=token=>{localStorage.setItem('token',token);setIsAuthenticated(true);};const logout=()=>{localStorage.removeItem('token');setIsAuthenticated(false);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,login,logout},children:children});};// Create a custom hook to use the AuthContext\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","login","token","localStorage","setItem","logout","removeItem","Provider","value","useAuth","context","Error"],"sources":["C:/Users/DELL/source/repos/nsalunke729/Tenant Rent Management/tenant-rent-app/src/AuthContext.js"],"sourcesContent":["// src/AuthContext.js\r\n\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\n// Create the context\r\nconst AuthContext = createContext();\r\n\r\n// Create the AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const login = (token) => {\r\n        localStorage.setItem('token', token);\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Create a custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n\r\n    return context;\r\n};\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAElE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC;AACA,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAE7D,KAAM,CAAAS,KAAK,CAAIC,KAAK,EAAK,CACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEF,KAAK,CAAC,CACpCF,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACjBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC,CAChCN,kBAAkB,CAAC,KAAK,CAAC,CAC7B,CAAC,CAED,mBACIN,IAAA,CAACC,WAAW,CAACY,QAAQ,EAACC,KAAK,CAAE,CAAET,eAAe,CAAEE,KAAK,CAAEI,MAAO,CAAE,CAAAP,QAAA,CAC3DA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED;AACA,MAAO,MAAM,CAAAW,OAAO,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,OAAO,CAAGnB,UAAU,CAACI,WAAW,CAAC,CAEvC,GAAI,CAACe,OAAO,CAAE,CACV,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAClE,CAEA,MAAO,CAAAD,OAAO,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}