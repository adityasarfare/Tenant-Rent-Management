{"ast":null,"code":"import axios from'axios';// Retrieve stored credentials (if they are stored in local storage)\nconst username='user';const password='password';function getBasicAuthHeader(username,password){// Combine the username and password into a single string and encode it using Base64\nconst credentials=`${username}:${password}`;const base64Credentials=btoa(credentials);// Encode to Base64\nreturn`Basic ${base64Credentials}`;};const apiClient=axios.create({baseURL:'http://51.20.252.82:8081/api',// Replace with your back-end URL\nheaders:{'Content-Type':'application/json',// Generate the Basic Authentication header using the utility function\n'Authorization':getBasicAuthHeader(username,password)}});// Function to get all tenants\nexport const getTenants=async()=>{try{const response=await apiClient.get('/tenants');return response.data;}catch(error){console.error('Error fetching tenants',error);throw error;}};// Function to create a new tenant\nexport const createTenant=async tenant=>{try{const response=await apiClient.post('/tenants',tenant);return response.data;}catch(error){console.error('Error creating tenant',error);throw error;}};// Function to update a tenant\nexport const updateTenant=async(id,tenant)=>{try{const response=await apiClient.put(`/tenants/${id}`,tenant);return response.data;}catch(error){console.error('Error updating tenant',error);throw error;}};// Function to get tenant by ID\nexport const getTenantById=async id=>{try{const response=await apiClient.get(`/tenants/${id}`);return response.data;}catch(error){console.error('Error fetching tenant by ID',error);throw error;}};// Function to delete a tenant\nexport const deleteTenant=async id=>{try{await apiClient.delete(`/tenants/${id}`);}catch(error){console.error('Error deleting tenant',error);throw error;}};// Similarly, add functions for rent payments\nexport const getRentPaymentsOld=async()=>{try{const response=await apiClient.get('/rentpayments');return response.data;}catch(error){console.error('Error fetching rent payments',error);throw error;}};export const getRentPayments=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;try{const response=await apiClient.get(`/rentpayments?page=${page}&size=${size}`);return response.data;}catch(error){console.error('Error fetching rent payments',error);throw error;}};// ... Other rent payment methods\n// Function to create a new rentpayments\nexport const createRentpayments=async rentpayments=>{try{const response=await apiClient.post('/rentpayments',rentpayments);return response.data;}catch(error){console.error('Error creating rent payments',error);throw error;}};// Function to update a rent payments\nexport const updateRentpayments=async(id,rentpayments)=>{try{const response=await apiClient.put(`/rentpayments/${id}`,{...rentpayments,id});return response.data;}catch(error){console.error('Error updating rent payments',error);throw error;}};// Function to get rentpayments by ID\nexport const getRentpaymentsById=async id=>{try{const response=await apiClient.get(`/rentpayments/${id}`);return response.data;}catch(error){console.error('Error fetching rentpayments by ID',error);throw error;}};// Function to delete a rentpayments\nexport const deleteRentpayments=async id=>{try{await apiClient.delete(`/rentpayments/${id}`);}catch(error){console.error('Error deleting rentpayments',error);throw error;}};","map":{"version":3,"names":["axios","username","password","getBasicAuthHeader","credentials","base64Credentials","btoa","apiClient","create","baseURL","headers","getTenants","response","get","data","error","console","createTenant","tenant","post","updateTenant","id","put","getTenantById","deleteTenant","delete","getRentPaymentsOld","getRentPayments","page","arguments","length","undefined","size","createRentpayments","rentpayments","updateRentpayments","getRentpaymentsById","deleteRentpayments"],"sources":["C:/Users/DELL/source/repos/nsalunke729/Tenant Rent Management/tenant-rent-app/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Retrieve stored credentials (if they are stored in local storage)\r\nconst username = 'user';\r\nconst password = 'password';\r\n\r\nfunction getBasicAuthHeader(username, password) {\r\n    // Combine the username and password into a single string and encode it using Base64\r\n    const credentials = `${username}:${password}`;\r\n    const base64Credentials = btoa(credentials); // Encode to Base64\r\n    return `Basic ${base64Credentials}`;\r\n};\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'http://51.20.252.82:8081/api', // Replace with your back-end URL\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        // Generate the Basic Authentication header using the utility function\r\n        'Authorization': getBasicAuthHeader(username, password),\r\n    },\r\n});\r\n\r\n// Function to get all tenants\r\nexport const getTenants = async () => {\r\n    try {\r\n        const response = await apiClient.get('/tenants');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching tenants', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to create a new tenant\r\nexport const createTenant = async (tenant) => {\r\n    try {\r\n        const response = await apiClient.post('/tenants', tenant);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating tenant', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to update a tenant\r\nexport const updateTenant = async (id, tenant) => {\r\n    try {\r\n        const response = await apiClient.put(`/tenants/${id}`, tenant);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating tenant', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to get tenant by ID\r\nexport const getTenantById = async (id) => {\r\n    try {\r\n        const response = await apiClient.get(`/tenants/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching tenant by ID', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to delete a tenant\r\nexport const deleteTenant = async (id) => {\r\n    try {\r\n        await apiClient.delete(`/tenants/${id}`);\r\n    } catch (error) {\r\n        console.error('Error deleting tenant', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Similarly, add functions for rent payments\r\nexport const getRentPaymentsOld = async () => {\r\n    try {\r\n        const response = await apiClient.get('/rentpayments');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching rent payments', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getRentPayments = async (page = 0, size = 10) => {\r\n    try {\r\n        const response = await apiClient.get(`/rentpayments?page=${page}&size=${size}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching rent payments', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n// ... Other rent payment methods\r\n// Function to create a new rentpayments\r\nexport const createRentpayments = async (rentpayments) => {\r\n    try {\r\n        const response = await apiClient.post('/rentpayments', rentpayments);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error creating rent payments', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to update a rent payments\r\nexport const updateRentpayments = async (id, rentpayments) => {\r\n    try {\r\n        const response = await apiClient.put(`/rentpayments/${id}`, { ...rentpayments, id });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error updating rent payments', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to get rentpayments by ID\r\nexport const getRentpaymentsById = async (id) => {\r\n    try {\r\n        const response = await apiClient.get(`/rentpayments/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching rentpayments by ID', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to delete a rentpayments\r\nexport const deleteRentpayments = async (id) => {\r\n    try {\r\n        await apiClient.delete(`/rentpayments/${id}`);\r\n    } catch (error) {\r\n        console.error('Error deleting rentpayments', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}